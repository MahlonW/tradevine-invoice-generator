version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3665:3000"
    environment:
      - NODE_ENV=production
      - PORT=3665
      - HOST=0.0.0.0
      - LOGO_URL=${LOGO_URL:-/logo.svg}
      - PRINTNODE_API_KEY=${PRINTNODE_API_KEY}
      - PRINTNODE_PRINTER_ID=${PRINTNODE_PRINTER_ID}
      - FOOTER_MAIN_TEXT=${FOOTER_MAIN_TEXT}
      - FOOTER_SUB_TEXT=${FOOTER_SUB_TEXT}
      - COMPANY_ADDRESS_LINE1=${COMPANY_ADDRESS_LINE1}
      - COMPANY_ADDRESS_LINE2=${COMPANY_ADDRESS_LINE2}
      - COMPANY_ADDRESS_LINE3=${COMPANY_ADDRESS_LINE3}
      - COMPANY_EMAIL=${COMPANY_EMAIL}
    volumes:
      # Mount environment file if you have one
      - ./.env:/app/.env:ro
    restart: unless-stopped
    networks:
      - app-network

  # Optional: Add a database service if needed
  # mysql:
  #   image: mysql:8.0
  #   environment:
  #     MYSQL_ROOT_PASSWORD: rootpassword
  #     MYSQL_DATABASE: trademe_db
  #     MYSQL_USER: trademe_user
  #     MYSQL_PASSWORD: trademe_password
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   restart: unless-stopped
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

# volumes:
#   mysql_data:
